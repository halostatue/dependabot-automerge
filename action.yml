# Copyright 2023-2025 Austin Ziegler, Kinetic Cafe and contributors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the specific language governing
# permissions and limitations under the License.

name: Enable Automerge for Dependabot
description: |
  Enables GitHub Automerge for Dependabot PRs
author: Austin Ziegler (@halostatue)
branding:
  icon: check-circle
  color: purple

inputs:
  repo-token:
    description: |
      The GitHub token for this action. Requires `pull-requests: write` permission.
    required: true
    default: ${{ github.token }}
  update-type:
    description: |
      The highest level of update that can be automatically merged. The default value is
      `patch`; supported values are `major`, `minor`, and `patch`. Automatic merge for
      `major` is not recommended.
    required: false
    default: patch
  merge-type:
    description: |
      The type of merge to be applied. Supported values are `auto`, `merge`, `rebase`, and
      `squash`. If `auto` is specified, this action will check the current repo whether
      merge commits, squash commits, and/or rebase commits are permitted (in that order).
      The first one enabled will be selected.
    required: false
    default: auto

runs:
  using: 'composite'
  steps:
    - id: config
      shell: bash
      run: |
        declare merge_flag enabled
        enabled=false
        case "${INPUTS_MERGE_TYPE}" in
        auto)
          for type in merge squash rebase; do
            if allowed="$(gh repo view --json "${type}CommitAllowed" -jq ".${type}CommitAllowed")" && [[ "${allowed}" == true ]]; then
              merge_flag="--${type}"
              break
            fi
          done
          ;;
        merge) merge_flag=--merge ;;
        rebase) merge_flag=--rebase ;;
        squash) merge_flag=--squash ;;
        *)
          echo "::error ::Invalid merge type '${INPUTS_MERGE_TYPE}'"
          exit 1
          ;;
        esac
        enabled=false

        case "${GITHUB_EVENT_NAME}" in
        pull_request|pull_request_target)
          [[ "${GITHUB_ACTOR}" == 'dependabot[bot]' ]] && enabled=true ;;
        *) : ;;
        esac

        {
          echo "enabled=${enabled}"
          echo "update-type=version-update:semver-${INPUTS_UPDATE_TYPE}"
          echo "merge-flag=${merge_flag}"
          echo "pr-number=${GITHUB_EVENTS_PULL_REQUEST_NUMBER}"
        } >>"${GITHUB_OUTPUT}"
      env:
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_EVENT_PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        INPUTS_MERGE_TYPE: ${{ inputs.merge-type || 'auto' }}
        INPUTS_UPDATE_TYPE: ${{ inputs.update-type }}

    - if: steps.config.outputs.enabled == 'true'
      id: metadata
      uses: dependabot/fetch-metadata@08eff52bf64351f401fb50d4972fa95b9f2c2d1b # v2.4.0
      with:
        github-token: ${{ inputs.repo-token }}

    - if: >
        steps.config.outputs.enabled == 'true'
        && steps.metadata.outputs.update-type == steps.config.outputs.update-type
      run: |
        gh pr merge --auto "${STEPS_CONFIG_OUTPUTS_MERGE_FLAG}" "${STEPS_CONFIG_OUTPUTS_PR_NUMBER}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.repo-token }}
        STEPS_CONFIG_OUTPUTS_MERGE_FLAG: ${{ steps.config.outputs.merge-flag }}
        STEPS_CONFIG_OUTPUTS_PR_NUMBER: ${{ steps.config.outputs.pr-number }}
